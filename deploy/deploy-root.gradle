import java.time.Duration
import io.dock2dock.android.Configuration

// Create variables with empty default values
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["sonatypeStagingProfileId"] = ''
ext["signingKeyId"] = ''
ext["signingPassword"] = ''
ext["signingKey"] = ''
ext["snapshot"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    // Use system environment variables
    ext["ossrhUsername"] = System.getenv('ORG_GRADLE_PROJECT_nexusUserName')
    ext["ossrhPassword"] = System.getenv('ORG_GRADLE_PROJECT_nexusPassword')
    ext["sonatypeStagingProfileId"] = System.getenv('ORG_GRADLE_PROJECT_sonatypeStagingProfileId')
    ext["signingkeyId"] = System.getenv('ORG_GRADLE_PROJECT_signingKeyId')
    ext["signingPassword"] = System.getenv('ORG_GRADLE_PROJECT_signingPassword')
    ext["signingKey"] = System.getenv('ORG_GRADLE_PROJECT_signingPassword')
    ext["snapshot"] = System.getenv('SNAPSHOT')
}

if (snapshot) {
    ext["rootVersionName"] = Configuration.snapshotVersionName
} else {
    ext["rootVersionName"] = Configuration.versionName
}

nexusPublishing {
    packageGroup = Configuration.artifactGroup

    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }

    clientTimeout = Duration.ofMinutes(5)
    connectTimeout = Duration.ofMinutes(1)

    transitionCheckOptions {
        maxRetries.set(40)
        delayBetween.set(Duration.ofSeconds(10))
    }
}